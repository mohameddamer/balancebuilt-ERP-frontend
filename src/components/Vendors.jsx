import React, {useEffect,useState} from 'react'; import API, { safeGet } from '../api'; import Toolbar from './Toolbar';
export default function Vendors(){
  const [vendors,setVendors]=useState([]); const [selected,setSelected]=useState(null); const [showForm,setShowForm]=useState(false); const [form, setForm] = useState({name:'', email:'', phone:''});
  useEffect(()=> load(), []);
  async function load(q){ const res = await safeGet('/api/master/vendors','vendors'); setVendors(res); }
  function onSearch(q){ if(!q){ load(); return;} API.get('/api/master/vendors',{params:{q}}).then(r=>setVendors(r.data)); }
  function onFilter(mode){ /* client side filter not implemented; server supports q param */ }
  function newItem(){ setForm({name:'',email:'',phone:''}); setShowForm(true); }
  function editItem(){ if(!selected) return alert('Select row'); const v = vendors.find(x=>x.id===selected); setForm(v); setShowForm(true); }
  async function save(){ try{ if(form.id) await API.put(`/api/master/vendors/${form.id}`, form); else await API.post('/api/master/vendors', form); setShowForm(false); load(); }catch(e){ alert('Save failed') } }
  async function del(){ if(!selected) return alert('Select row'); if(!confirm('Delete?')) return; await API.delete(`/api/master/vendors/${selected}`); load(); }
  return (<div><div className='card'><h3>Vendors</h3><div style={{marginTop:8}}><button className='btn' onClick={()=>{window.open((import.meta.env.VITE_BACKEND_URL||'http://localhost:8000')+'/api/master/vendors/export?format=csv')}}>Export CSV</button><button className='btn' onClick={()=>{window.open((import.meta.env.VITE_BACKEND_URL||'http://localhost:8000')+'/api/master/vendors/export?format=xlsx')}}>Export XLSX</button></div><Toolbar onNew={newItem} onEdit={editItem} onDelete={del} onSearch={onSearch} filterOptions={[{value:'contains',label:'Contains'},{value:'startswith',label:'Starts With'},{value:'equals',label:'Equals'}]} onFilter={onFilter} /><table className='table'><thead><tr><th></th><th>ID</th><th>Code</th><th>Name</th><th>Email</th><th>Phone</th></tr></thead><tbody>{vendors.map(v=> <tr key={v.id} onClick={()=>setSelected(v.id)} style={{background:selected===v.id? 'rgba(255,255,255,0.03)':''}}><td><input type='radio' checked={selected===v.id} readOnly/></td><td>{v.id}</td><td>{v.code}</td><td>{v.name}</td><td>{v.email}</td><td>{v.phone}</td></tr>)}</tbody></table></div>{showForm&&<div className='modal'><h4>{form.id? 'Edit Vendor':'New Vendor'}</h4><div style={{display:'grid',gap:8}}><input className='input' placeholder='Code' value={form.code||''} onChange={e=>setForm({...form,code:e.target.value})}/><input className='input' placeholder='Name' value={form.name} onChange={e=>setForm({...form,name:e.target.value})}/><input className='input' placeholder='Email' value={form.email} onChange={e=>setForm({...form,email:e.target.value})}/><input className='input' placeholder='Phone' value={form.phone} onChange={e=>setForm({...form,phone:e.target.value})}/><div style={{display:'flex',gap:8,marginTop:8}}><button className='btn' onClick={save}>Save</button><button className='btn' onClick={()=>setShowForm(false)}>Cancel</button></div></div></div>}</div>); }
