import React,{useEffect,useState} from 'react'; import API, { safeGet } from '../api'; import { BarChart, Bar, LineChart, Line, XAxis, YAxis, Tooltip, ResponsiveContainer } from 'recharts';
export default function Reports(){
  const [pl,setPl]=useState([]); const [trial,setTrial]=useState([]); const [arAging,setArAging]=useState([]); const [invVal,setInvVal]=useState([]); const [sales,setSales]=useState([]); const [purchases,setPurchases]=useState([]);
  const [start,setStart]=useState('2025-07-01'); const [end,setEnd]=useState('2025-09-30');
  useEffect(()=>{ safeGet('/api/finance/pl_snapshots','pl_snapshots').then(setPl); safeGet('/api/finance/trial_balance','trial_balance').then(setTrial); safeGet('/api/finance/ar_aging','ar_aging').then(setArAging); safeGet('/api/finance/inventory_value','inventory_value').then(setInvVal); safeGet('/api/finance/sales_report','sales_report').then(setSales); safeGet('/api/finance/purchase_report','purchase_report').then(setPurchases); },[]);
  function applyRange(){ safeGet(`/api/finance/pl_snapshots?start=${start}&end=${end}`,'pl_snapshots').then(setPl); safeGet(`/api/finance/sales_report?start=${start}&end=${end}`,'sales_report').then(setSales); safeGet(`/api/finance/purchase_report?start=${start}&end=${end}`,'purchase_report').then(setPurchases); }
  const plData = pl.map(p=>({name:p.period_end? p.period_end.slice(0,10):'', revenue:p.total_revenue, cogs:p.cogs, net:p.net_profit}));
  return (<div><div className='card'><h3>Reports - Date Range</h3><div className='filter-row'><input className='input' type='date' value={start} onChange={e=>setStart(e.target.value)}/><input className='input' type='date' value={end} onChange={e=>setEnd(e.target.value)}/><button className='btn' onClick={applyRange}>Apply</button></div></div><div className='card'><h3>P&L (period)</h3><div style={{height:300}}><ResponsiveContainer><LineChart data={plData}><XAxis dataKey='name'/><YAxis/><Tooltip/><Line dataKey='revenue' stroke='#0a2540'/><Line dataKey='net' stroke='#7DA9C7'/></LineChart></ResponsiveContainer></div></div><div className='card'><h3>Trial Balance</h3><table className='table'><thead><tr><th>Code</th><th>Name</th><th>Balance</th></tr></thead><tbody>{trial.map(t=> <tr key={t.id}><td>{t.code}</td><td>{t.name}</td><td>{t.balance}</td></tr>)}</tbody></table></div><div className='card'><h3>AR Aging</h3><table className='table'><thead><tr><th>Invoice</th><th>Customer</th><th>Due</th><th>Amount</th></tr></thead><tbody>{arAging.map(a=> <tr key={a.id}><td>{a.invoice_number}</td><td>{a.customer_id}</td><td>{a.due_date? a.due_date.slice(0,10):''}</td><td>{a.amount}</td></tr>)}</tbody></table></div><div className='card'><h3>Inventory Value</h3><table className='table'><thead><tr><th>Product</th><th>Warehouse</th><th>Qty</th><th>Unit Cost</th><th>Value</th></tr></thead><tbody>{invVal.map(i=> <tr key={i.product}><td>{i.product}</td><td>{i.warehouse}</td><td>{i.qty}</td><td>{i.unit_cost}</td><td>{i.value}</td></tr>)}</tbody></table></div><div className='card'><h3>Sales</h3><table className='table'><thead><tr><th>Order</th><th>Customer</th><th>Date</th><th>Total</th></tr></thead><tbody>{sales.map(s=> <tr key={s.id}><td>{s.order_number}</td><td>{s.customer_name}</td><td>{s.order_date? s.order_date.slice(0,10):''}</td><td>{s.total_amount}</td></tr>)}</tbody></table></div><div className='card'><h3>Purchases</h3><table className='table'><thead><tr><th>Order</th><th>Vendor</th><th>Date</th><th>Total</th></tr></thead><tbody>{purchases.map(p=> <tr key={p.id}><td>{p.order_number}</td><td>{p.vendor_name}</td><td>{p.order_date? p.order_date.slice(0,10):''}</td><td>{p.total_amount}</td></tr>)}</tbody></table></div></div>); }
